{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "description": "Get app information",
        "operationId": "AppController_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          }
        },
        "summary": "App information",
        "tags": [
          "app"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app"
        ]
      }
    },
    "/v1/users/profile": {
      "get": {
        "operationId": "UserProfileController_get_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user.profile.get.notFound",
                        "error": {
                          "name": "user.profile.get.notFound",
                          "message": "User profile not found"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get user profile",
        "tags": [
          "users-profile"
        ]
      },
      "patch": {
        "operationId": "UserProfileController_update_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user.profile.update.validationFailed",
                        "error": {
                          "name": "user.profile.update.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user.profile.update.notFound",
                        "error": {
                          "name": "user.profile.update.notFound",
                          "message": "User not found"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update user profile",
        "tags": [
          "users-profile"
        ]
      }
    },
    "/v1/users": {
      "post": {
        "operationId": "UserController_create_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user.create.validationFailed",
                        "error": {
                          "name": "user.create.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create user",
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "UserController_list_v1",
        "parameters": [
          {
            "name": "searchTerm",
            "required": false,
            "in": "query",
            "description": "Search by user name, email, or phone number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "USER",
                "MODERATOR",
                "EDITOR",
                "ADMIN",
                "ROOT",
                "CONTENT_CREATOR",
                "COMMUNITY_MANAGER",
                "SUPPORT",
                "ANALYST"
              ]
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ]
            }
          },
          {
            "name": "createdAtGte",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAtLte",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Object"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated list records successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Collection"
                    },
                    {
                      "properties": {
                        "edges": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user.list.validationFailed",
                        "error": {
                          "name": "user.list.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get many users",
        "tags": [
          "users"
        ]
      }
    },
    "/v1/users/bulk": {
      "post": {
        "operationId": "UserController_bulkOperation_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUserOperationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkOperationResultDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user.bulk.invalidOperation",
                        "error": {
                          "name": "user.bulk.invalidOperation",
                          "message": "Invalid bulk operation"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user.bulk.validationFailed",
                        "error": {
                          "name": "user.bulk.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Bulk user operations (update/delete/deactivate/activate)",
        "tags": [
          "users"
        ]
      }
    },
    "/v1/users/{id}": {
      "get": {
        "operationId": "UserController_getUser_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user.get.notFound",
                        "error": {
                          "name": "user.get.notFound",
                          "message": "User not found"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get user by ID",
        "tags": [
          "users"
        ]
      }
    },
    "/v1/users/{id}/activity": {
      "get": {
        "operationId": "UserController_getUserActivity_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "activityType",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated list records successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Collection"
                    },
                    {
                      "properties": {
                        "edges": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserActivityDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get user activity log",
        "tags": [
          "users"
        ]
      }
    },
    "/v1/users/{id}/reset-password": {
      "post": {
        "operationId": "UserController_initiatePasswordReset_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetResultDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Admin-initiated password reset",
        "tags": [
          "users"
        ]
      }
    },
    "/v1/emotions": {
      "post": {
        "operationId": "EmotionController_createEmotion_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmotionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmotionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "emotion.create.invalidType",
                        "error": {
                          "name": "emotion.create.invalidType",
                          "message": "Invalid emotion type"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "emotion.create.validationFailed",
                        "error": {
                          "name": "emotion.create.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create an emotion log",
        "tags": [
          "emotions"
        ]
      }
    },
    "/v1/emotions/last-7-days": {
      "get": {
        "operationId": "EmotionController_getEmotionHistory_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get paginated list records successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Collection"
                    },
                    {
                      "properties": {
                        "edges": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DailyEmotionDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get emotions for the last 7 days",
        "tags": [
          "emotions"
        ]
      }
    },
    "/v1/streaks": {
      "get": {
        "operationId": "StreakController_getStreak_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreakResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "streak.get.notFound",
                        "error": {
                          "name": "streak.get.notFound",
                          "message": "User streak not found"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get user streak",
        "tags": [
          "streaks"
        ]
      }
    },
    "/v1/files/avatars/upload-url": {
      "get": {
        "description": "Get the upload url to upload avatar to storage",
        "operationId": "FileController_getUploadAvatarUrl_v1",
        "parameters": [
          {
            "name": "size",
            "required": true,
            "in": "query",
            "description": "file size in byte",
            "schema": {
              "example": 1024,
              "type": "number"
            }
          },
          {
            "name": "mimeType",
            "required": true,
            "in": "query",
            "description": "file type",
            "schema": {
              "example": "image/jpeg",
              "type": "string",
              "enum": [
                "image/jpeg",
                "image/png",
                "image/webp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadUrlDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get the upload avatar url",
        "tags": [
          "files"
        ]
      }
    },
    "/v1/image-proxy": {
      "get": {
        "description": "View a image through image proxy",
        "operationId": "ImageProxyController_viewImage_v1",
        "parameters": [],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "imageProxy.view",
                        "error": {
                          "name": "imageProxy.view"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "image-proxy"
        ]
      }
    },
    "/v1/notifications": {
      "get": {
        "description": "Return paginated notifications that belong to the authenticated user",
        "operationId": "NotificationController_list_v1",
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Pagination offset",
            "schema": {
              "default": 0,
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Pagination limit",
            "schema": {
              "default": 20,
              "example": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated list records successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Collection"
                    },
                    {
                      "properties": {
                        "edges": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/NotificationOutput"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "List up notifications belong to a user",
        "tags": [
          "notifications"
        ]
      }
    },
    "/v1/notifications/view": {
      "patch": {
        "description": "Mark all notifications that belong to authenticated user as viewed. If you want to mask a notification, you may add a query \"id=<notification id>\"",
        "operationId": "NotificationController_view_v1",
        "parameters": [
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "The exactly notification you want to delete",
            "schema": {
              "example": "664b82b0-180a-4cbe-b84a-f5b1831f5089",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Mark all notifications as viewed",
        "tags": [
          "notifications"
        ]
      }
    },
    "/v1/feeds": {
      "get": {
        "operationId": "FeedController_getFeed_v1",
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Number of items to skip",
            "schema": {
              "minimum": 0,
              "example": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page (default: 16)",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "example": 16,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated list records successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Collection"
                    },
                    {
                      "properties": {
                        "edges": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FeedItemDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get user feed",
        "tags": [
          "feeds"
        ]
      }
    },
    "/v1/comments/{type}/{id}": {
      "post": {
        "operationId": "ContentCommentController_createComment_v1",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Content type",
            "schema": {
              "enum": [
                "POST",
                "EMOTION"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Content ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "comment.create.validationFailed",
                        "error": {
                          "name": "comment.create.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "comment.create.failed",
                        "error": {
                          "name": "comment.create.failed",
                          "message": "Failed to create comment"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create comment for content",
        "tags": [
          "Content Comments"
        ]
      },
      "get": {
        "operationId": "ContentCommentController_getCommentsByContent_v1",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Content type",
            "schema": {
              "enum": [
                "POST",
                "EMOTION"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Content ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated list records successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Collection"
                    },
                    {
                      "properties": {
                        "edges": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CommentDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get comments for content",
        "tags": [
          "Content Comments"
        ]
      }
    },
    "/v1/comments/{id}": {
      "patch": {
        "operationId": "ContentCommentController_updateComment_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "comment.update.validationFailed",
                        "error": {
                          "name": "comment.update.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "comment.update.notOwner",
                        "error": {
                          "name": "comment.update.notOwner",
                          "message": "Not authorized to update this comment"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "comment.update.notFound",
                        "error": {
                          "name": "comment.update.notFound",
                          "message": "Comment not found"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "comment.update.failed",
                        "error": {
                          "name": "comment.update.failed",
                          "message": "Failed to update comment"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update comment",
        "tags": [
          "Content Comments"
        ]
      },
      "delete": {
        "operationId": "ContentCommentController_deleteComment_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "comment.delete.notOwner",
                        "error": {
                          "name": "comment.delete.notOwner",
                          "message": "Not authorized to delete this comment"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "comment.delete.notFound",
                        "error": {
                          "name": "comment.delete.notFound",
                          "message": "Comment not found"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "comment.delete.failed",
                        "error": {
                          "name": "comment.delete.failed",
                          "message": "Failed to delete comment"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Delete comment",
        "tags": [
          "Content Comments"
        ]
      }
    },
    "/v1/social/engagement/{type}/{id}": {
      "get": {
        "operationId": "SocialEngagementController_getEngagementStats_v1",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Content type",
            "schema": {
              "enum": [
                "POST",
                "EMOTION"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Content ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngagementStatsDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get engagement statistics for content",
        "tags": [
          "Social Engagement"
        ]
      }
    },
    "/v1/social/like/{type}/{id}": {
      "post": {
        "operationId": "SocialEngagementController_likeContent_v1",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Content type",
            "schema": {
              "enum": [
                "POST",
                "EMOTION"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Content ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "social.like.alreadyLiked",
                        "error": {
                          "name": "social.like.alreadyLiked",
                          "message": "Content already liked"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "social.like.failed",
                        "error": {
                          "name": "social.like.failed",
                          "message": "Failed to like content"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Like content",
        "tags": [
          "Social Engagement"
        ]
      }
    },
    "/v1/social/unlike/{type}/{id}": {
      "post": {
        "operationId": "SocialEngagementController_unlikeContent_v1",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Content type",
            "schema": {
              "enum": [
                "POST",
                "EMOTION"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Content ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "social.unlike.notLiked",
                        "error": {
                          "name": "social.unlike.notLiked",
                          "message": "Content not liked"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "social.unlike.failed",
                        "error": {
                          "name": "social.unlike.failed",
                          "message": "Failed to unlike content"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Unlike content",
        "tags": [
          "Social Engagement"
        ]
      }
    },
    "/v1/social/view/{type}/{id}": {
      "post": {
        "operationId": "SocialEngagementController_recordView_v1",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Content type",
            "schema": {
              "enum": [
                "POST",
                "EMOTION"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Content ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "social.view.failed",
                        "error": {
                          "name": "social.view.failed",
                          "message": "Failed to record view"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Record content view",
        "tags": [
          "Social Engagement"
        ]
      }
    },
    "/v1/feed/following": {
      "get": {
        "operationId": "FollowingFeedController_getFollowingFeed_v1",
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort order for the feed",
            "schema": {
              "enum": [
                "recent",
                "popular"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get feed of content from followed users",
        "tags": [
          "Feed"
        ]
      }
    },
    "/v1/posts/drafts": {
      "post": {
        "operationId": "DraftPostController_createDraft_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDraftPostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftPostResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "draft.create.validationFailed",
                        "error": {
                          "name": "draft.create.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "draft.create.topicNotFound",
                        "error": {
                          "name": "draft.create.topicNotFound",
                          "message": "One or more topics not found: {{missingTopicIds}}"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "draft.create.failed",
                        "error": {
                          "name": "draft.create.failed",
                          "message": "Failed to create draft post"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create a draft post",
        "tags": [
          "Posts"
        ]
      },
      "get": {
        "operationId": "DraftPostController_listDrafts_v1",
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "updatedAt",
                "title"
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topics",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "published",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated list records successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Collection"
                    },
                    {
                      "properties": {
                        "edges": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DraftPostListItemDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "List user draft posts",
        "tags": [
          "Posts"
        ]
      }
    },
    "/v1/posts/drafts/{id}": {
      "patch": {
        "operationId": "DraftPostController_updateDraft_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDraftPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftPostResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "draft.update.validationFailed",
                        "error": {
                          "name": "draft.update.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "draft.update.failed",
                        "error": {
                          "name": "draft.update.failed",
                          "message": "Failed to update draft post"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update a draft post",
        "tags": [
          "Posts"
        ]
      },
      "delete": {
        "operationId": "DraftPostController_deleteDraft_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Draft post ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Delete a draft post",
        "tags": [
          "Posts"
        ]
      }
    },
    "/v1/posts/drafts/{id}/publish": {
      "post": {
        "operationId": "DraftPostController_publishDraft_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishDraftDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishedPostResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "draft.publish.validationFailed",
                        "error": {
                          "name": "draft.publish.validationFailed",
                          "message": "Validation failed. Please check the input values."
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "draft.publish.slugExists",
                        "error": {
                          "name": "draft.publish.slugExists",
                          "message": "A post with this slug already exists: {{slug}}"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "draft.publish.failed",
                        "error": {
                          "name": "draft.publish.failed",
                          "message": "Failed to publish draft post"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Publish a draft post",
        "tags": [
          "Posts"
        ]
      }
    },
    "/v1/posts/drafts/{id}/apply": {
      "post": {
        "operationId": "DraftPostController_applyDraft_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyDraftDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishedPostResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Apply draft changes to published post",
        "tags": [
          "Posts"
        ]
      }
    },
    "/v1/posts/published/{id}": {
      "delete": {
        "operationId": "PublishedPostController_deletePublished_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Published post ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Delete a published post",
        "tags": [
          "Posts"
        ]
      }
    },
    "/v1/posts/published": {
      "get": {
        "operationId": "PublishedPostController_listPublished_v1",
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "publishedAt",
                "updatedAt",
                "title"
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topics",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fromDate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated list records successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Collection"
                    },
                    {
                      "properties": {
                        "edges": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PublishedPostDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "List published posts",
        "tags": [
          "Posts"
        ]
      }
    },
    "/v1/posts/published/{id}/draft": {
      "post": {
        "operationId": "PublishedPostController_createDraftFromPublished_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftPostResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create a draft from a published post",
        "tags": [
          "Posts"
        ]
      }
    },
    "/v1/users/{targetUserId}/following": {
      "post": {
        "operationId": "UserFollowController_followUser_v1",
        "parameters": [
          {
            "name": "targetUserId",
            "required": true,
            "in": "path",
            "description": "ID of the user to follow",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user-follow.followUser.selfFollow",
                        "error": {
                          "name": "user-follow.followUser.selfFollow",
                          "message": "Users cannot follow themselves"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user-follow.followUser.alreadyFollowing",
                        "error": {
                          "name": "user-follow.followUser.alreadyFollowing",
                          "message": "User is already following this user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user-follow.followUser.userNotFound",
                        "error": {
                          "name": "user-follow.followUser.userNotFound",
                          "message": "User not found"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Follow a user",
        "tags": [
          "User Follow"
        ]
      },
      "delete": {
        "operationId": "UserFollowController_unfollowUser_v1",
        "parameters": [
          {
            "name": "targetUserId",
            "required": true,
            "in": "path",
            "description": "ID of the user to unfollow",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "user-follow.unfollowUser.userFollowNotFound",
                        "error": {
                          "name": "user-follow.unfollowUser.userFollowNotFound",
                          "message": "User follow relationship not found"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Unfollow a user",
        "tags": [
          "User Follow"
        ]
      }
    },
    "/v1/users/{userId}/following/{targetUserId}": {
      "get": {
        "operationId": "UserFollowController_isFollowing_v1",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID of the follower user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetUserId",
            "required": true,
            "in": "path",
            "description": "ID of the user being followed",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsFollowingDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Check if a user is following another user",
        "tags": [
          "User Follow"
        ]
      }
    },
    "/v1/users/{userId}/followers": {
      "get": {
        "operationId": "UserFollowController_getFollowers_v1",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get followers of a user",
        "tags": [
          "User Follow"
        ]
      }
    },
    "/v1/users/{userId}/following": {
      "get": {
        "operationId": "UserFollowController_getFollowing_v1",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get users followed by a user",
        "tags": [
          "User Follow"
        ]
      }
    },
    "/v1/users/{userId}/follow-counts": {
      "get": {
        "operationId": "UserFollowController_getFollowCounts_v1",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowCountsDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.invalidToken",
                        "error": {
                          "name": "common.invalidToken",
                          "message": "Access token has expired or is not valid"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.noPrivilege",
                        "error": {
                          "name": "common.noPrivilege",
                          "message": "Required one of the following roles: [{{roles}}]"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requirePerson",
                        "error": {
                          "name": "common.requirePerson",
                          "message": "Agent must be a person"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.requireUser",
                        "error": {
                          "name": "common.requireUser",
                          "message": "Agent must be a user"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message",
                            "name"
                          ]
                        }
                      },
                      "example": {
                        "message": "common.serverError",
                        "error": {
                          "name": "common.serverError",
                          "message": "Internal server error"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get follower and following counts for a user",
        "tags": [
          "User Follow"
        ]
      }
    }
  },
  "info": {
    "title": "API Service (dev) v0.1.1",
    "description": "The API document is generated automatically",
    "version": "0.1.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "Object": {
        "type": "object",
        "properties": {}
      },
      "FailResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "API response message",
            "example": "success"
          },
          "error": {
            "type": "object",
            "description": "API response error"
          },
          "success": {
            "type": "boolean",
            "description": "API request result",
            "example": false
          }
        },
        "required": [
          "message",
          "error",
          "success"
        ]
      },
      "ProfileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "018fb0ab-f1e3-7bd7-961c-8b14b479a718"
          },
          "authId": {
            "type": "string",
            "example": "018fb0ab-f1e3-7bd7-961c-8b14b479a710"
          },
          "firstName": {
            "type": "string",
            "example": "Luffy"
          },
          "lastName": {
            "type": "string",
            "example": "Monkey D."
          },
          "email": {
            "type": "string",
            "example": "luffy@isling.me"
          },
          "phone": {
            "type": "string",
            "example": "123456789"
          },
          "avatar": {
            "type": "string",
            "example": "https://image.com/avatars/luffy.png"
          },
          "roles": {
            "example": [
              "USER"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-03-02T16:28:19.199Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-03-02T16:28:19.199Z"
          }
        },
        "required": [
          "id",
          "authId",
          "firstName",
          "roles",
          "isActive",
          "createdAt",
          "updatedAt"
        ]
      },
      "PatchProfileDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user's full name",
            "maxLength": 64,
            "minLength": 3,
            "example": "Luffy"
          },
          "avatar": {
            "type": "string",
            "description": "The avatar URL",
            "maxLength": 256,
            "example": "https://image.com/avatars/luffy"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "018fb0ab-f1e3-7bd7-961c-8b14b479a718"
          },
          "authId": {
            "type": "string",
            "example": "018fb0ab-f1e3-7bd7-961c-8b14b479a710"
          },
          "firstName": {
            "type": "string",
            "example": "Luffy"
          },
          "lastName": {
            "type": "string",
            "example": "Monkey D."
          },
          "email": {
            "type": "string",
            "example": "luffy@isling.me"
          },
          "phone": {
            "type": "string",
            "example": "123456789"
          },
          "avatar": {
            "type": "string",
            "example": "https://image.com/avatars/luffy.png"
          },
          "roles": {
            "example": [
              "USER"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-03-02T16:28:19.199Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-03-02T16:28:19.199Z"
          }
        },
        "required": [
          "id",
          "authId",
          "firstName",
          "roles",
          "isActive",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user's full name",
            "maxLength": 64,
            "minLength": 3,
            "example": "Luffy"
          },
          "avatar": {
            "type": "string",
            "description": "The avatar URL",
            "maxLength": 256,
            "example": "https://image.com/avatars/luffy"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "example": 20
          },
          "offset": {
            "type": "number",
            "example": 0
          },
          "total": {
            "type": "number",
            "example": 100
          }
        },
        "required": [
          "limit",
          "offset",
          "total"
        ]
      },
      "Collection": {
        "type": "object",
        "properties": {
          "edges": {
            "description": "List paginated data",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pagination": {
            "description": "Pagination information",
            "allOf": [
              {
                "$ref": "#/components/schemas/Pagination"
              }
            ]
          }
        },
        "required": [
          "edges",
          "pagination"
        ]
      },
      "BulkOperationResultDto": {
        "type": "object",
        "properties": {
          "successCount": {
            "type": "number"
          },
          "failureCount": {
            "type": "number"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "successCount",
          "failureCount",
          "errors"
        ]
      },
      "BulkUserOperationDto": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "UPDATE_ROLE",
              "DEACTIVATE",
              "ACTIVATE",
              "DELETE"
            ]
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "newRoles": {
            "items": {
              "type": "string"
            },
            "example": [
              "USER",
              "MODERATOR",
              "EDITOR",
              "ADMIN",
              "ROOT",
              "CONTENT_CREATOR",
              "COMMUNITY_MANAGER",
              "SUPPORT",
              "ANALYST"
            ],
            "type": "array"
          }
        },
        "required": [
          "operation",
          "userIds"
        ]
      },
      "UserActivityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "018fb0ab-f1e3-7bd7-961c-8b14b479a718"
          },
          "userId": {
            "type": "string",
            "example": "018fb0ab-f1e3-7bd7-961c-8b14b479a710"
          },
          "performedBy": {
            "type": "string",
            "example": "018fb0ab-f1e3-7bd7-961c-8b14b479a711"
          },
          "activityType": {
            "type": "string",
            "example": "ACCOUNT_ACTIVATED"
          },
          "details": {
            "type": "object",
            "example": {
              "timestamp": "2025-03-02T16:28:19.205Z"
            }
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "example": "2025-03-02T16:28:19.205Z"
          }
        },
        "required": [
          "id",
          "userId",
          "performedBy",
          "activityType",
          "details",
          "timestamp"
        ]
      },
      "PasswordResetResultDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "resetToken": {
            "type": "string"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "success",
          "resetToken",
          "expiresAt"
        ]
      },
      "EmotionResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the emotion",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "type": {
            "type": "string",
            "description": "Type of emotion (joy, sadness, anger, fear, joker)",
            "example": "joy"
          },
          "intensity": {
            "type": "number",
            "description": "Intensity level of the emotion (1-5)",
            "example": 1,
            "minimum": 1,
            "maximum": 5
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp when the emotion was recorded",
            "example": "2024-03-20T10:30:00Z"
          },
          "note": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "intensity",
          "timestamp"
        ]
      },
      "CreateEmotionDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "joy",
              "sadness",
              "anger",
              "fear",
              "joker"
            ],
            "description": "Type of emotion",
            "example": "joy"
          },
          "note": {
            "type": "string",
            "description": "Optional note about the emotion",
            "example": "Feeling great after completing a task!",
            "maxLength": 256
          }
        },
        "required": [
          "type"
        ]
      },
      "DailyEmotionDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2024-03-20",
            "description": "Date in YYYY-MM-DD format"
          },
          "emotion": {
            "type": "string",
            "enum": [
              "joy",
              "sadness",
              "anger",
              "fear",
              "joker"
            ],
            "description": "Most intense emotion of the day",
            "example": "joy",
            "nullable": true
          },
          "intensity": {
            "type": "number",
            "example": 3,
            "description": "Intensity of the emotion",
            "minimum": 1,
            "maximum": 5,
            "nullable": true
          },
          "note": {
            "type": "string",
            "example": "Had a great day!",
            "description": "Note for the emotion",
            "nullable": true
          }
        },
        "required": [
          "date",
          "emotion",
          "intensity"
        ]
      },
      "StreakResponseDto": {
        "type": "object",
        "properties": {
          "currentStreak": {
            "type": "number",
            "example": 5,
            "description": "Current streak count"
          },
          "longestStreak": {
            "type": "number",
            "example": 10,
            "description": "Longest streak achieved"
          },
          "lastActivity": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-20T15:00:00.000Z",
            "description": "Last activity timestamp"
          }
        },
        "required": [
          "currentStreak",
          "longestStreak",
          "lastActivity"
        ]
      },
      "UploadUrlDto": {
        "type": "object",
        "properties": {
          "uploadUrl": {
            "type": "string",
            "description": "upload file url",
            "example": "https://storage.googleapis.com/..."
          },
          "uploadHeaders": {
            "type": "object",
            "description": "headers that must be attached in a request when uploading file",
            "properties": {},
            "example": {
              "Content-Type": "application/octet-stream",
              "x-goog-content-length-range": "0,5000000"
            }
          },
          "expires": {
            "type": "number",
            "description": "upload file url expires time",
            "example": 1718472026584
          },
          "objectUrl": {
            "type": "string",
            "description": "original object url on Storage",
            "example": "gs://example-bucket/users/01/profile/02.jpeg"
          },
          "signedUrl": {
            "type": "string",
            "description": "signed Url",
            "example": "https://storage.googleapis.com/..."
          }
        },
        "required": [
          "uploadUrl",
          "uploadHeaders",
          "expires",
          "objectUrl",
          "signedUrl"
        ]
      },
      "NotificationDecoratorOutput": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "number",
            "description": "The index of the first character that applied decorator",
            "example": 0
          },
          "length": {
            "type": "number",
            "description": "The length of the text that applied decorator",
            "example": 3
          },
          "class": {
            "type": "string",
            "description": "The class show how to format this text that inspried by Tailwindcss class",
            "example": "font-semibold text-blue-500"
          },
          "type": {
            "type": "string",
            "description": "The type of decorator that relate to original object such as user, post, group...",
            "example": "user"
          },
          "link": {
            "type": "string",
            "description": "The link relate to this object",
            "example": "/users/d0e7beaa-f466-49c3-b00d-20e89a72abc8/profile"
          }
        },
        "required": [
          "offset",
          "length",
          "class"
        ]
      },
      "NotificationOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id",
            "example": "d0e7beaa-f466-49c3-b00d-20e89a72abc8"
          },
          "text": {
            "type": "string",
            "description": "The content of a notification without any format",
            "example": "Tom and 2 other users like your post"
          },
          "decorators": {
            "description": "The decorators that help content can be formated in frontend",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDecoratorOutput"
            }
          },
          "link": {
            "type": "string",
            "description": "The URL that related to this notification",
            "example": "/posts/f5c8403e-69cc-434b-a545-e45097965cec"
          },
          "notificationTime": {
            "type": "string",
            "description": "The timestamp of the notification",
            "example": "2024-06-25T03:10:20Z"
          },
          "viewedAt": {
            "type": "string",
            "description": "The read timestamp. If it NULL it mean this notification has not been read yet",
            "example": "2024-06-25T03:20:20Z"
          }
        },
        "required": [
          "id",
          "text",
          "decorators",
          "link",
          "notificationTime"
        ]
      },
      "PostContentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the post"
          },
          "title": {
            "type": "string",
            "description": "Title of the post"
          },
          "subtitle": {
            "type": "string",
            "description": "Subtitle of the post"
          },
          "excerpt": {
            "type": "string",
            "description": "Excerpt of the post content"
          },
          "cover": {
            "type": "string",
            "description": "Cover image URL of the post"
          },
          "readingTime": {
            "type": "number",
            "description": "Estimated reading time in minutes"
          },
          "likeCount": {
            "type": "number",
            "description": "Number of likes"
          },
          "replyCount": {
            "type": "number",
            "description": "Number of replies"
          },
          "viewCount": {
            "type": "number",
            "description": "Number of views"
          },
          "publishedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Publication date"
          },
          "author": {
            "description": "Author of the post",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "title",
          "excerpt",
          "readingTime",
          "likeCount",
          "replyCount",
          "viewCount",
          "publishedAt",
          "author"
        ]
      },
      "EmotionContentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the emotion"
          },
          "emotion": {
            "type": "string",
            "description": "Type of emotion"
          },
          "intensity": {
            "type": "number",
            "description": "Intensity of the emotion (1-5)"
          },
          "note": {
            "type": "string",
            "description": "Optional note about the emotion"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "Date of the emotion"
          },
          "user": {
            "description": "User who logged the emotion",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "emotion",
          "intensity",
          "date",
          "user"
        ]
      },
      "FeedItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the feed item"
          },
          "contentType": {
            "type": "string",
            "enum": [
              "POST",
              "USER_EMOTION"
            ],
            "description": "Type of content in the feed (e.g., post, emotion)"
          },
          "publishedPostId": {
            "type": "string",
            "nullable": true,
            "description": "Identifier of the referenced post"
          },
          "userEmotionId": {
            "type": "string",
            "nullable": true,
            "description": "Identifier of the referenced emotion"
          },
          "score": {
            "type": "number",
            "description": "Relevance score for feed ranking"
          },
          "viewedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "description": "Timestamp when the user viewed this feed item"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp when the feed item was created"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp when the feed item was last updated"
          },
          "publishedPost": {
            "nullable": true,
            "description": "Post content if contentType is POST",
            "allOf": [
              {
                "$ref": "#/components/schemas/PostContentDto"
              }
            ]
          },
          "userEmotion": {
            "nullable": true,
            "description": "Emotion content if contentType is USER_EMOTION",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmotionContentDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "contentType",
          "publishedPostId",
          "userEmotionId",
          "score",
          "createdAt",
          "updatedAt"
        ]
      },
      "CommentAuthorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "firstName"
        ]
      },
      "BotAuthorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "CommentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "postId": {
            "type": "string"
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "botId": {
            "type": "string",
            "nullable": true
          },
          "authorType": {
            "type": "string"
          },
          "userAuthor": {
            "$ref": "#/components/schemas/CommentAuthorDto"
          },
          "botAuthor": {
            "$ref": "#/components/schemas/BotAuthorDto"
          },
          "emotionId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "content",
          "postId",
          "userId",
          "createdAt",
          "updatedAt",
          "authorType"
        ]
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Comment content",
            "example": "This is a great post!"
          },
          "parentId": {
            "type": "string",
            "description": "Parent comment ID for replies",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "content"
        ]
      },
      "UpdateCommentDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Updated comment content",
            "example": "This is an updated comment!"
          }
        },
        "required": [
          "content"
        ]
      },
      "EngagementStatsDto": {
        "type": "object",
        "properties": {
          "likeCount": {
            "type": "number",
            "description": "Number of likes"
          },
          "viewCount": {
            "type": "number",
            "description": "Number of views"
          },
          "commentCount": {
            "type": "number",
            "description": "Number of comments"
          }
        },
        "required": [
          "likeCount",
          "viewCount",
          "commentCount"
        ]
      },
      "DraftPostResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "object"
          },
          "cover": {
            "type": "string",
            "nullable": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publishedId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "topics",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateDraftPostDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Post title"
          },
          "subtitle": {
            "type": "string",
            "description": "Post subtitle"
          },
          "content": {
            "type": "object",
            "description": "Post content in JSON format"
          },
          "cover": {
            "type": "string",
            "description": "Cover image URL"
          },
          "topics": {
            "description": "Array of topic IDs",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "title",
          "content",
          "topics"
        ]
      },
      "UpdateDraftPostDto": {
        "type": "object",
        "properties": {}
      },
      "PublishedPostResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "object"
          },
          "cover": {
            "type": "string",
            "nullable": true
          },
          "publishedAt": {
            "format": "date-time",
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "excerpt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "publishedAt",
          "slug",
          "excerpt"
        ]
      },
      "PublishDraftDto": {
        "type": "object",
        "properties": {}
      },
      "DraftPostListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "content": {
            "type": "object"
          },
          "cover": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "published": {
            "type": "boolean"
          },
          "publishedId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "updatedAt",
          "topics",
          "createdAt",
          "published"
        ]
      },
      "ApplyDraftDto": {
        "type": "object",
        "properties": {
          "excerpt": {
            "type": "string"
          }
        }
      },
      "PublishedPostDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Post ID"
          },
          "title": {
            "type": "string",
            "description": "Post title"
          },
          "subtitle": {
            "type": "string",
            "description": "Post subtitle"
          },
          "slug": {
            "type": "string",
            "description": "Post slug"
          },
          "content": {
            "type": "object",
            "description": "Post content"
          },
          "excerpt": {
            "type": "string",
            "description": "Post excerpt"
          },
          "cover": {
            "type": "string",
            "description": "Post cover image URL"
          },
          "readingTime": {
            "type": "number",
            "description": "Post reading time in minutes"
          },
          "topics": {
            "description": "Post topics",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publishedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Post published date"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Post last updated date"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata"
          },
          "author": {
            "type": "object",
            "description": "Post author"
          }
        },
        "required": [
          "id",
          "title",
          "slug",
          "content",
          "excerpt",
          "readingTime",
          "topics",
          "publishedAt",
          "updatedAt",
          "author"
        ]
      },
      "IsFollowingDto": {
        "type": "object",
        "properties": {
          "isFollowing": {
            "type": "boolean",
            "description": "Whether the user is following the target user",
            "example": true
          }
        },
        "required": [
          "isFollowing"
        ]
      },
      "FollowCountsDto": {
        "type": "object",
        "properties": {
          "followersCount": {
            "type": "number",
            "description": "Number of followers"
          },
          "followingCount": {
            "type": "number",
            "description": "Number of users being followed"
          }
        },
        "required": [
          "followersCount",
          "followingCount"
        ]
      }
    }
  }
}